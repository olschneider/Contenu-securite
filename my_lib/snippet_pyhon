"""script skeleton"""
import sys
import os

from dotenv import load_dotenv
load_dotenv()
def main() -> int:
    """Test"""
    ret = 0
    return ret

if __name__ == '__main__':
    sys.exit(main())

"""Generation de clé Pub/Priv RSA 2048"""
from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives import serialization

# Générer une paire de clés RSA
private_key = rsa.generate_private_key(
    public_exponent=65537,
    key_size=2048,
)

# Sérialiser la clé privée et l'enregistrer dans un fichier
private_key_pem = private_key.private_bytes(
    encoding=serialization.Encoding.PEM,
    format=serialization.PrivateFormat.TraditionalOpenSSL,
    encryption_algorithm=serialization.NoEncryption()
)

with open('private_key.pem', 'wb') as private_key_file:
    private_key_file.write(private_key_pem)

# Sérialiser la clé publique et l'enregistrer dans un fichier
public_key = private_key.public_key()
public_key_pem = public_key.public_bytes(
    encoding=serialization.Encoding.PEM,
    format=serialization.PublicFormat.SubjectPublicKeyInfo
)

with open('public_key.pem', 'wb') as public_key_file:
    public_key_file.write(public_key_pem)

print("Les fichiers de clé privée et publique ont été générés avec succès.")